/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    macros {
        macro0: macro0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N1 &kp N2 &kp N1 &kp N2 &kp N3>;
            label = "MACRO0";
        };

        macro1: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N1 &kp N2 &kp N1 &kp N2 &kp N3>;
            label = "MACRO1";
        };

        macro2: macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N1 &kp N2 &kp N1 &kp N2 &kp N3>;
            label = "MACRO2";
        };
    };

    behaviors {
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                  ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |                  ---                |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |                  ---                |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  |                  ---                |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |

            bindings = <
&kp TAB     &kp Q      &kp W     &kp E     &kp R  &kp T      &kp Y      &kp U  &kp I                        &kp O                    &kp P                        &kp BSPC
&kp ESC     &kp A      &kp S     &kp D     &kp F  &kp G      &kp H      &kp J  &kp K                        &kp L                    &auto_shift LS(SEMI) SEMI    &auto_shift LS(APOS) APOS
&kp LSHIFT  &kp Z      &kp X     &kp C     &kp V  &kp B      &kp N      &kp M  &auto_shift LS(COMMA) COMMA  &auto_shift LS(DOT) DOT  &auto_shift LS(SLASH) SLASH  &mt RSHIFT ENTER
&mo 3       &kp LCTRL  &kp LALT  &kp LGUI  &mo 1  &kp SPACE  &kp SPACE  &mo 2  &kp LEFT                     &kp DOWN                 &kp UP                       &kp RIGHT
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                  ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |                  ---                |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |                  ---                |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  |                  ---                |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |

            bindings = <
&kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&kp DEL        &kp F1        &kp F2      &kp F3         &kp F4        &kp F5         &kp F6         &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(PIPE)
&trans         &kp F7        &kp F8      &kp F9         &kp F10       &kp F11        &kp F12        &trans         &trans        &trans        &trans        &trans
&trans         &trans        &trans      &trans         &trans        &trans         &trans         &trans         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END
            >;
        };

        raise_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                  ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |                  ---                |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |                  ---                |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  |                  ---                |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5   &kp N6   &kp N7     &kp N8     &kp N9     &kp N0     &trans
&kp DEL    &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH
&trans     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &none      &none      &none      &trans     &trans
&trans     &trans  &trans  &trans  &trans   &trans   &trans   &trans     &kp HOME   &kp PG_DN  &kp PG_UP  &kp END
            >;
        };

        adjust_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                  ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |                  ---                |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |                  ---                |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  |                  ---                |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |

            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp KP_NUMLOCK   &kp KP_N7   &kp KP_N8   &kp KP_N9     &kp KP_MINUS   &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans        &trans           &kp KP_N4   &kp KP_N5   &kp KP_N6     &kp KP_PLUS    &trans
&trans      &trans        &trans        &trans        &trans        &trans        &kp KP_MULTIPLY  &kp KP_N1   &kp KP_N2   &kp KP_N3     &kp KP_DIVIDE  &kp KP_ENTER
&trans      &trans        &trans        &trans        &trans        &trans        &kp KP_N0        &kp KP_DOT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &kp C_PP
            >;
        };
    };
};
